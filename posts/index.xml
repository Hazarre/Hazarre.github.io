<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on HenryChang</title><link>https://hazarre.github.io/posts/</link><description>Recent content in Posts on HenryChang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Apr 2023 17:23:51 +0800</lastBuildDate><atom:link href="https://hazarre.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Immersive Media Installation on Particle-Wave Duality</title><link>https://hazarre.github.io/posts/dualityexhibition/</link><pubDate>Mon, 10 Apr 2023 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/dualityexhibition/</guid><description>The goal of this project is to let the audience experience quantum weirdness through immersive installation of music and projection, as if they are the photons in the famous double-slit experiment. The core of the installation incorporates the mathematical functions and patterns that describe quantum and/or physical properties into music and visuals.
With Owen Setlik, Vigilance Brandon, and Alex Levinson.
Supported by Bard Experimental Humanities Collaborative Network Micro-grant with final grant report.</description></item><item><title>How this blog is built.</title><link>https://hazarre.github.io/posts/about/</link><pubDate>Wed, 22 Dec 2021 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/about/</guid><description>Some features of this blogs includes:
Math typesetting with KaTeX.js. 3D animation with Three.js. Markdown. Layout CSS with bootstrap.js. See all features in action at this example post.
This is a static site build with Hugo and hosted on Github. Each page layout is structured under layout/_default/, with reusable componenents under partials/. Additionally, hugo support shortcodes/ to add html content inside markdown posts.
Full source code can be found on the repo https://github.</description></item><item><title>Initial Post with Tests on Code Block, LaTeX, Three.js</title><link>https://hazarre.github.io/posts/testpost/</link><pubDate>Wed, 22 Dec 2021 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/testpost/</guid><description>This is an example post to demonstrate the media formats that can be posted on this website. For details about implementations, see How this blog is built
LaTeX math typesetting Let&amp;rsquo;s type some math inline $E = mc^2$, and then some math blocks with KaTeX: $$ \ket{0}=\begin{pmatrix} 1 \\ 0 \end{pmatrix} $$ For example, the famous Shrodinger&amp;rsquo;s equation: $$ H(t)|\psi(t)\rangle=i \hbar \frac{\partial}{\partial t}|\psi(t)\rangle $$
Code Blocks with copy to clipboard Now some code:</description></item><item><title>Music visualizer with StyleGAN at Hack Simon's Rock</title><link>https://hazarre.github.io/posts/hacksr/</link><pubDate>Tue, 30 Mar 2021 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/hacksr/</guid><description>We got the first-place music visualizer by feeding audio frame spectrogram as latent vectors into StyleGAN at Hack Simon&amp;rsquo;s Rock.
A example video.
Github Repo.</description></item><item><title>Gopher Wood Clinic Webpage</title><link>https://hazarre.github.io/posts/gopher/</link><pubDate>Sat, 01 Aug 2020 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/gopher/</guid><description>Implemented the following features for Gopher Wood Clinic Webpage.
Built a sortable and filterable lookup table/calendar for appointment records using Svelte.js and Node.js. Connected the frontend content with backend MariaDB using HTTP requests. Duration: Aug 2020</description></item><item><title>P2p Document Sharing App on Web3</title><link>https://hazarre.github.io/posts/p2pdoc/</link><pubDate>Sat, 01 Aug 2020 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/p2pdoc/</guid><description>This project as part of the Fluence Hackathon on Gitcoin. The whole project is documented in this Medium write-up for full details. To breifly summarize,
Prototyped a p2p document-sharing app backend that authenticates users by their self.ID DID with WebAssembly. Resolved import versioning to React interface that connects users to the app through Metamask login.</description></item><item><title>Cell2Art with CycleGAN</title><link>https://hazarre.github.io/posts/cell2arts/</link><pubDate>Mon, 25 May 2020 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/cell2arts/</guid><description>This project uses CycleGAN in (Tensorflow) to perform image to image translation and make a short artsy clip combining the fluid motion of cell and aesthetic of abstract paintings. For example, see an example video clip. Please view in smaller window since the videos are generated using frames of 256x256 pixels. See the report for project detials.
Duration: Apr-May 2020
Github repo.</description></item><item><title>Multiplayer Battleship Over C websocket</title><link>https://hazarre.github.io/posts/cbattleship/</link><pubDate>Mon, 25 May 2020 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/cbattleship/</guid><description>Built an online multiplayer console battleship game in C using web sockets (served on AWS LightSail).
Duration: Apr-May 2020
Github: https://github.com/Hazarre/Multi-player-Battleship/projects</description></item><item><title>Embedded Multi-Function Timer with 8051 Microcontroller</title><link>https://hazarre.github.io/posts/8051mc/</link><pubDate>Thu, 25 Aug 2016 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/8051mc/</guid><description>Duration: Jul-Aug 2016. With: Prof. Taikang Ning, Trinity College, CT.
Summary Designed, implemented and tested a multi-function timer after studying 8051 embedded systems. 8051 Microcontroller Embedded Multi-Function Timer Applied knowledge learned to implement a power amplifier to run earphone jack signals on a 20W speaker. Results Demo Project Planning Document. Testing LED Video. Final Timer Demo Video. Circuit Design and Wire Wrapping Code for programming 2k EEPROM link BaseN EQU 30h	; set the base addr for normal display BaseS EQU 34h	; set the base addr for stopwatch display ; Program initialization org 0000h ajmp MainProg org 0003h; jump address for the ET0 interrupt ajmp ISRIE0; ]ump to the starting location of interrupt service routine ISRIE0 org 000bh ; jump address for timer0 overflow interrupt ajmp ISRTF0 ; ]ump to the starting location of interrupt service routine ISRTF0 org 0030h; starting address of the main MainProg ;mov TMOD, #11h ;initialize Timer0 setb TR0 ; enable Timer0 to start counting setb ET0 ; enable TF0 interrupt setb IT0; enable IT0 mov TH0, #0ECh mov TL0, #7Fh ; initialize each digit in normal mode mov 30h, #00h mov 31h, #10h mov 32h, #20h mov 33h, #30h ; initialize each digit in stop-watch mode mov 34h, #00h mov 35h, #10h mov 36h, #20h mov 37h, #30h mov 40h, #00h ; set addr 40h for one second-count in normal mode mov 41h, #00h ; set addr 41h for ten msec-count in stop watch mode mov 42h, #02h ; set addr 42h to count the times of External Interrupt mov 43h, #00h ; set addr to save how many 5-msec required for per carry unit e.</description></item><item><title>Research: An Efficient Algorithm for Pickup and Delivery Problems with Ride-sharing and Multiple Transfers</title><link>https://hazarre.github.io/posts/pdp/</link><pubDate>Thu, 25 Aug 2016 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/pdp/</guid><description>Abstract &amp;amp; Paper Preview Efficient pickup&amp;amp;delivery is critical to the competitiveness of logistics and transportation industries. The problem is challenging due to the complexity of transportation networks, high variety and uncertain demands, and traffic dynamics. The emergence of autonomous vehicles, Internet of things, mobile communications and cloud-based computing services bring new opportunities. We exploit these technological advancements to design futuristic pickup&amp;amp;delivery systems and strategies for efficient logistics and transportation. The objective of this research paper is to minimize the travel cost (weight*distance) of a set of autonomous cars with preplanned primary routes in an environment with stockers at intersections for transfer.</description></item><item><title>Rubik's Cube Solver With Lego Mindstorm EV3</title><link>https://hazarre.github.io/posts/rubikssolver/</link><pubDate>Thu, 25 Aug 2016 17:23:51 +0800</pubDate><guid>https://hazarre.github.io/posts/rubikssolver/</guid><description>The Rubik&amp;rsquo;s Cube Solver in action.</description></item></channel></rss>